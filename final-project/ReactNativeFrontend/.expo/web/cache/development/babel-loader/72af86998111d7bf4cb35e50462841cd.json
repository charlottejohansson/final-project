{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Start = function Start() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchResults = _useState4[0],\n    setSearchResults = _useState4[1];\n  var onFormSubmit = function onFormSubmit(event) {\n    event.preventDefault();\n    var options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': 'e8ab353f9dmsh0ed7b069671f69cp1bb323jsn7175036a5189',\n        'X-RapidAPI-Host': 'watchmode.p.rapidapi.com'\n      }\n    };\n    fetch('https://watchmode.p.rapidapi.com/autocomplete-search/?search_value=Breaking%20Bad&search_type=1', options).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      return setSearchResults(response);\n    }).catch(function (err) {\n      return console.error(err);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      children: [\"Start page Click \", _jsx(Link, {\n        to: \"/login\",\n        children: \"here \"\n      }), \" to sign up or sign in \"]\n    }), _jsx(Text, {\n      children: \"Get Streaming details of Movie and TV Shows from 150+ Streaming platforms\"\n    }), _jsx(TextInput, {\n      placeholder: \"search for movie\",\n      type: \"text\",\n      onChange: setTitle,\n      onSubmitEditing: function onSubmitEditing(event) {\n        setTitle(event.target.value);\n        setSearchResults(null);\n      }\n    }), _jsx(Button, {\n      title: \"Search\",\n      onPress: onFormSubmit,\n      type: \"submit\"\n    }), searchResults && _jsx(View, {\n      children: searchResults.map(function (item) {\n        return _jsxs(View, {\n          children: [\" \", _jsxs(Text, {\n            children: [item.name, \" \"]\n          })]\n        }, item.name);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'lightpink',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Start;","map":{"version":3,"names":["React","useState","Link","Start","title","setTitle","searchResults","setSearchResults","onFormSubmit","event","preventDefault","options","method","headers","fetch","then","response","json","catch","err","console","error","styles","container","target","value","map","item","name","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/Users/charlottejohansson/Desktop/final-project/final-project/ReactNativeFrontend/components/Start.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport { Link } from 'react-router-dom';\nimport { StyleSheet, Text, View, Button, TextInput, Image } from \"react-native\";\n\nconst Start = () => {\n\n  const [title, setTitle] = useState(null); // Input title of the show/movie\n\tconst [searchResults, setSearchResults] = useState(null); // Response 1: Results matching the input title\n\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\nconst options = {\n\tmethod: 'GET',\n\theaders: {\n\t\t'X-RapidAPI-Key': 'e8ab353f9dmsh0ed7b069671f69cp1bb323jsn7175036a5189',\n\t\t'X-RapidAPI-Host': 'watchmode.p.rapidapi.com'\n\t}\n};\n\nfetch('https://watchmode.p.rapidapi.com/autocomplete-search/?search_value=Breaking%20Bad&search_type=1', options)\n\t.then(response => response.json())\n\t.then(response => setSearchResults(response))\n\t.catch(err => console.error(err));\n}\n\n\nreturn (\n  <View style={styles.container}>\n        <Text>Start page\n  Click <Link to='/login'>here </Link> to sign up or sign in </Text>\n    <Text>\n\t\t\t\tGet Streaming details of Movie and TV Shows from 150+ Streaming\n\t\t\t\tplatforms\n\t\t</Text>\n\n    <TextInput\n      placeholder=\"search for movie\"\n      type= \"text\"\n      onChange={setTitle}\n      onSubmitEditing={(event) => {\n          setTitle(event.target.value);\n          setSearchResults(null); // Remove previous results\n          // setTitleDetails(null);\n      }}\n    />\n\n    <Button\n       title=\"Search\"\n       onPress={(onFormSubmit)}\n       type=\"submit\"\n    />\n\n    {searchResults && (\n      <View>\n        {searchResults.map((item) => {\n          return (\n            <View key={item.name}> <Text>{item.name} </Text>\n            {/* <Text> {item.streamingInfo} </Text>   */}\n            {/* l<Image source={{uri:`${item.backdropURLs[0]}`}} */}\n            {/* <Image source={{ uri: `${item.backdropURLs}` }} */}\n            {/* <Image source={{ uri: `https://image.tmdb.org/t/p/w342${item.posterURL}` }} */}\n             {/* <Image source={{ uri: \"https://image.tmdb.org/t/p/w92/hkC4yNDFmW1yQuQhtZydMeRuaAb.jpg\" }}/> */}\n      </View>\n\n          )\n        })\n        }\n      </View>\n    )}\n\n  </View>\n  );\n}\n\n\nconst styles = StyleSheet.create({\ncontainer: {\nflex: 1,\nbackgroundColor: 'lightpink',\nalignItems: 'center',\njustifyContent: 'center',\n},\n});\n\nexport default Start;\n\n\n/// look for movie in internal API\n// if (movie found) { return the found movie to the component},\n// else do all the things that you will do anyway\n// in the end in the else add the movie to your internal API/DATABSE"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGxC,IAAMC,KAAK,GAAG,SAARA,KAAK,GAAS;EAElB,gBAA0BF,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjCG,KAAK;IAAEC,QAAQ;EACvB,iBAA0CJ,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjDK,aAAa;IAAEC,gBAAgB;EAGrC,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAK,EAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;IAC1B,IAAMC,OAAO,GAAG;MACfC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACR,gBAAgB,EAAE,oDAAoD;QACtE,iBAAiB,EAAE;MACpB;IACD,CAAC;IAEDC,KAAK,CAAC,iGAAiG,EAAEH,OAAO,CAAC,CAC/GI,IAAI,CAAC,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAACC,IAAI,EAAE;IAAA,EAAC,CACjCF,IAAI,CAAC,UAAAC,QAAQ;MAAA,OAAIT,gBAAgB,CAACS,QAAQ,CAAC;IAAA,EAAC,CAC5CE,KAAK,CAAC,UAAAC,GAAG;MAAA,OAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAAA,EAAC;EAClC,CAAC;EAGD,OACE,MAAC,IAAI;IAAC,KAAK,EAAEG,MAAM,CAACC,SAAU;IAAA,WACxB,MAAC,IAAI;MAAA,gCACL,KAAC,IAAI;QAAC,EAAE,EAAC,QAAQ;QAAA;MAAA,EAAa;IAAA,EAA8B,EAChE,KAAC,IAAI;MAAA;IAAA,EAGA,EAEL,KAAC,SAAS;MACR,WAAW,EAAC,kBAAkB;MAC9B,IAAI,EAAE,MAAM;MACZ,QAAQ,EAAElB,QAAS;MACnB,eAAe,EAAE,yBAACI,KAAK,EAAK;QACxBJ,QAAQ,CAACI,KAAK,CAACe,MAAM,CAACC,KAAK,CAAC;QAC5BlB,gBAAgB,CAAC,IAAI,CAAC;MAE1B;IAAE,EACF,EAEF,KAAC,MAAM;MACJ,KAAK,EAAC,QAAQ;MACd,OAAO,EAAGC,YAAc;MACxB,IAAI,EAAC;IAAQ,EACd,EAEDF,aAAa,IACZ,KAAC,IAAI;MAAA,UACFA,aAAa,CAACoB,GAAG,CAAC,UAACC,IAAI,EAAK;QAC3B,OACE,MAAC,IAAI;UAAA,gBAAkB,MAAC,IAAI;YAAA,WAAEA,IAAI,CAACC,IAAI;UAAA,EAAS;QAAA,GAArCD,IAAI,CAACC,IAAI,CAMnB;MAGL,CAAC;IAAC,EAGL;EAAA,EAEI;AAET,CAAC;AAGD,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAM,CAAC;EACjCP,SAAS,EAAE;IACXQ,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,WAAW;IAC5BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAChB;AACA,CAAC,CAAC;AAEF,eAAe/B,KAAK"},"metadata":{},"sourceType":"module"}