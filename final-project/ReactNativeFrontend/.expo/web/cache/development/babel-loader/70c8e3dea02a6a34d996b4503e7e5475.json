{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect, useState, createRef } from \"react\";\nimport { useDispatch, useSelector, batch } from \"react-redux\";\nimport { useNavigate, Link } from \"react-router-native\";\nimport { API_URL } from \"../utils/utils\";\nimport user from \"../reducers/user\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Typography, Containers, Colors } from \"../styles\";\nimport { PrimaryBtn } from \"../styles/buttons\";\nimport { InputField } from \"../styles/inputfield\";\nimport { Heading } from \"../styles/heading\";\nimport { spacing } from \"../styles/spacing\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"login\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    mode = _useState6[0],\n    setMode = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var dispatch = useDispatch();\n  var navigate = useNavigate();\n  var accessToken = useSelector(function (store) {\n    return store.user.accessToken;\n  });\n  useEffect(function () {\n    if (accessToken) {\n      navigate(\"/main\");\n    }\n  }, [accessToken]);\n  var passwordInputRef = createRef();\n  var onFormSubmit = function onFormSubmit(event) {\n    event.preventDefault();\n    var options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    };\n    fetch(API_URL(mode), options).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.success) {\n        batch(function () {\n          dispatch(user.actions.setUsername(data.response.username));\n          dispatch(user.actions.setUserId(data.response.id));\n          dispatch(user.actions.setAccessToken(data.response.accessToken));\n          dispatch(user.actions.setError(null));\n        });\n      } else {\n        alert(\"error, could not find user - make sure you've registered and that the password is correct \");\n        batch(function () {\n          dispatch(user.actions.setUsername(null));\n          dispatch(user.actions.setUserId(null));\n          dispatch(user.actions.setAccessToken(null));\n          dispatch(user.actions.setError(data.response));\n        });\n      }\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    onPress: onFormSubmit,\n    children: [_jsx(Text, {\n      style: styles.h2,\n      children: \"Login \"\n    }), _jsxs(View, {\n      style: styles.innerWrapper,\n      children: [_jsx(InputField, {\n        placeholder: \"Username\",\n        onChangeText: setUsername,\n        value: username,\n        autoCapitalize: \"none\",\n        returnKeyType: \"next\",\n        blurOnSubmit: false,\n        onSubmitEditing: function onSubmitEditing() {\n          return passwordInputRef.current && passwordInputRef.current.focus();\n        }\n      }), _jsx(InputField, {\n        placeholder: \"Password\",\n        ref: passwordInputRef,\n        value: password,\n        blurOnSubmit: false,\n        secureTextEntry: true,\n        onChangeText: setPassword,\n        returnKeyType: \"next\"\n      }), _jsx(PrimaryBtn, {\n        title: \"Login\",\n        onPress: onFormSubmit,\n        type: \"submit\"\n      }), _jsxs(Text, {\n        style: styles.text,\n        children: [\"Don't have an account?\", _jsx(Link, {\n          to: \"/register\",\n          children: _jsx(Text, {\n            style: styles.linkText,\n            children: \"Sign up here\"\n          })\n        })]\n      })]\n    }), _jsx(Button, {\n      title: \"Back to start page\",\n      onPress: function onPress() {\n        navigate(\"/\");\n        dispatch(user.actions.setAccessToken(null));\n      },\n      type: \"submit\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: _objectSpread(_objectSpread({}, Containers.outerContainer), {}, {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }),\n  h2: _objectSpread(_objectSpread({}, Typography.h2), {}, {\n    color: Colors.palette.lavenderBlush\n  }),\n  text: _objectSpread(_objectSpread({}, Typography.body2), {}, {\n    color: Colors.palette.lavenderBlush,\n    textAlign: \"center\"\n  }),\n  linkText: _objectSpread(_objectSpread({}, Typography.body2), {}, {\n    color: Colors.palette.frostbite,\n    padding: \"3pt\"\n  }),\n  textInput: {\n    color: Colors.palette.lavenderBlush\n  },\n  innerWrapper: {\n    gap: spacing.M\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useEffect","useState","createRef","useDispatch","useSelector","batch","useNavigate","Link","API_URL","user","Typography","Containers","Colors","PrimaryBtn","InputField","Heading","spacing","Login","username","setUsername","password","setPassword","mode","setMode","error","setError","dispatch","navigate","accessToken","store","passwordInputRef","onFormSubmit","event","preventDefault","options","method","headers","body","JSON","stringify","fetch","then","response","json","data","success","actions","setUserId","id","setAccessToken","alert","styles","container","h2","innerWrapper","current","focus","text","linkText","StyleSheet","create","outerContainer","justifyContent","alignItems","color","palette","lavenderBlush","body2","textAlign","frostbite","padding","textInput","gap","M"],"sources":["/Users/charlottejohansson/Desktop/final-project/final-project/ReactNativeFrontend/components/Login.js"],"sourcesContent":["import React, {useEffect, useState, createRef} from \"react\";\nimport { useDispatch, useSelector, batch } from \"react-redux\";\nimport { useNavigate, Link } from \"react-router-native\";\nimport { API_URL } from '../utils/utils'\nimport user from '../reducers/user';\n\nimport { StyleSheet, Text, View, Button } from \"react-native\";\nimport { Typography, Containers, Colors } from '../styles'\nimport { PrimaryBtn } from \"../styles/buttons\";\nimport { InputField } from \"../styles/inputfield\";\nimport { Heading } from \"../styles/heading\";\nimport { spacing } from \"../styles/spacing\";\n\nconst Login = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [mode, setMode] = useState(\"login\");\n    const [error, setError] = useState(null);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const accessToken = useSelector((store) => store.user.accessToken);\n    useEffect(() => {\n        if (accessToken) {\n            navigate(\"/main\");\n        }\n    }, [accessToken])\n\n    const passwordInputRef = createRef(); // meaning?\n\n    const onFormSubmit =(event) => {\n        event.preventDefault();\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({username: username, password: password })\n        }\n        \n        fetch(API_URL(mode), options)\n            .then(response => response.json())\n            .then(data => {\n                if(data.success) {\n                    batch(()=> {\n                        dispatch(user.actions.setUsername(data.response.username));\n                        dispatch(user.actions.setUserId(data.response.id))\n                        dispatch(user.actions.setAccessToken(data.response.accessToken));\n                        dispatch(user.actions.setError(null));\n                    });\n                } else {\n                    alert(\"error, could not find user - make sure you've registered and that the password is correct \");\n                    batch (() => {\n                        dispatch(user.actions.setUsername(null));\n                        dispatch(user.actions.setUserId(null))\n                        dispatch(user.actions.setAccessToken(null));\n                        dispatch(user.actions.setError(data.response));\n                    });\n                }\n            })\n    }\n    \n    return (    \n        <View style={styles.container} onPress={(onFormSubmit)}>\n            <Text style={styles.h2}>Login </Text>\n            <View style={styles.innerWrapper}>\n                <InputField\n                    placeholder=\"Username\" \n                    onChangeText={setUsername}\n                    value={username}\n                    autoCapitalize=\"none\" //meaning?\n                    returnKeyType=\"next\" // meaning?\n                    blurOnSubmit={false} // meaning?\n                    onSubmitEditing={() => passwordInputRef.current &&  passwordInputRef.current.focus()} // meaning?\n                />\n                <InputField \n                    placeholder=\"Password\" \n                    ref={passwordInputRef}\n                    value={password} \n                    blurOnSubmit={false}\n                    secureTextEntry={true}\n                    onChangeText={setPassword}\n                    returnKeyType=\"next\"\n                />\n                <PrimaryBtn \n                    title=\"Login\"\n                    onPress={(onFormSubmit)}\n                    type=\"submit\"\n                />\n                <Text style={styles.text}>Don't have an account?\n                    <Link to='/register'>\n                        <Text style={styles.linkText}>Sign up here</Text>\n                    </Link>\n                </Text>\n            </View>\n            \n            <Button \n                title=\"Back to start page\"\n                onPress={() => { navigate(\"/\"); dispatch(user.actions.setAccessToken(null));}}\n                type=\"submit\"\n            />\n        </View>\n    )\n}\nconst styles = StyleSheet.create({\n    container: {\n        ...Containers.outerContainer,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n\n    h2: {\n        ...Typography.h2,\n        color: Colors.palette.lavenderBlush,\n    },\n  \n    text: {\n        ...Typography.body2,\n        color: Colors.palette.lavenderBlush,\n        textAlign: \"center\",\n    },\n\n    linkText: {\n        ...Typography.body2,\n        color: Colors.palette.frostbite,\n        padding: \"3pt\",\n    },\n  \n    textInput: {\n        color: Colors.palette.lavenderBlush,\n    },\n\n    innerWrapper: {\n        gap: spacing.M,\n    }\n});\n\nexport default Login;\n\n\n\n  \n"],"mappings":"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"},"metadata":{},"sourceType":"module"}