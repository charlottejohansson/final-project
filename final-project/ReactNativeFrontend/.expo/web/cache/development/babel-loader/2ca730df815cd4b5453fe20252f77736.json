{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport profiles from \"../reducers/profiles.js\";\nimport { API_URL } from \"../utils/utils\";\nimport { useNavigate, Link } from \"react-router-native\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ProfilePage = function ProfilePage() {\n  var profilesItems = useSelector(function (store) {\n    return store.profiles.items;\n  });\n  var dispatch = useDispatch();\n  var accessToken = useSelector(function (store) {\n    return store.user.accessToken;\n  });\n  var navigate = useNavigate();\n  useEffect(function () {\n    if (!accessToken) {\n      navigate(\"/login\");\n    }\n  }, []);\n  useEffect(function () {\n    var options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": accessToken\n      }\n    };\n    fetch(API_URL(\"profiles\"), options).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.success) {\n        dispatch(profiles.actions.setItems(data.response));\n        dispatch(profiles.actions.setError(null));\n      } else {\n        dispatch(profiles.actions.setItems([]));\n        dispatch(profiles.actions.setError(data.response));\n      }\n    });\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      children: \"ProfilePage - it's working!\"\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'yellow',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default ProfilePage;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","profiles","API_URL","useNavigate","Link","ProfilePage","profilesItems","store","items","dispatch","accessToken","user","navigate","options","method","headers","fetch","then","res","json","data","success","actions","setItems","response","setError","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/Users/charlottejohansson/Desktop/final-project/final-project/ReactNativeFrontend/components/ProfilePage.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport profiles from \"../reducers/profiles.js\";\nimport { API_URL } from '../utils/utils'\nimport { useNavigate, Link } from \"react-router-native\";\nimport { StyleSheet, Text, View, Button } from \"react-native\";\n\nconst ProfilePage = () => {\n    const profilesItems = useSelector((store) => store.profiles.items);\n    const dispatch = useDispatch();\n    const accessToken = useSelector((store) => store.user.accessToken);\n    const navigate = useNavigate();\n\n    useEffect( () => {\n        if (!accessToken) {\n            navigate(\"/login\");\n        }\n    }, []);\n    \n    useEffect(() => {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": accessToken\n            }\n        }\n\n        fetch(API_URL(\"profiles\"), options)\n            .then(res => res.json())\n            .then(data => {\n                if(data.success) {\n                    dispatch(profiles.actions.setItems(data.response));\n                    dispatch(profiles.actions.setError(null));\n                } else {\n                    dispatch(profiles.actions.setItems([]));\n                    dispatch(profiles.actions.setError(data.response));\n                }\n            })\n    }, []);\n\n    return (\n        <View style={styles.container}>\n            <Text>ProfilePage - it's working!</Text>\n            {/* <Button \n                title=\"Sign out\"\n                onPress={() => { navigate(\"/\"); dispatch(user.actions.setAccessToken(null));}} //doesn't work to sign in again, you need to reload the page\n                type=\"submit\"\n            /> */}\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'yellow',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\n\n\nexport default ProfilePage;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,QAAQ;AACf,SAASC,OAAO;AAChB,SAASC,WAAW,EAAEC,IAAI,QAAQ,qBAAqB;AAAC;AAAA;AAAA;AAAA;AAAA;AAGxD,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;EACtB,IAAMC,aAAa,GAAGN,WAAW,CAAC,UAACO,KAAK;IAAA,OAAKA,KAAK,CAACN,QAAQ,CAACO,KAAK;EAAA,EAAC;EAClE,IAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,IAAMW,WAAW,GAAGV,WAAW,CAAC,UAACO,KAAK;IAAA,OAAKA,KAAK,CAACI,IAAI,CAACD,WAAW;EAAA,EAAC;EAClE,IAAME,QAAQ,GAAGT,WAAW,EAAE;EAE9BL,SAAS,CAAE,YAAM;IACb,IAAI,CAACY,WAAW,EAAE;MACdE,QAAQ,CAAC,QAAQ,CAAC;IACtB;EACJ,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,YAAM;IACZ,IAAMe,OAAO,GAAG;MACZC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAEL;MACrB;IACJ,CAAC;IAEDM,KAAK,CAACd,OAAO,CAAC,UAAU,CAAC,EAAEW,OAAO,CAAC,CAC9BI,IAAI,CAAC,UAAAC,GAAG;MAAA,OAAIA,GAAG,CAACC,IAAI,EAAE;IAAA,EAAC,CACvBF,IAAI,CAAC,UAAAG,IAAI,EAAI;MACV,IAAGA,IAAI,CAACC,OAAO,EAAE;QACbZ,QAAQ,CAACR,QAAQ,CAACqB,OAAO,CAACC,QAAQ,CAACH,IAAI,CAACI,QAAQ,CAAC,CAAC;QAClDf,QAAQ,CAACR,QAAQ,CAACqB,OAAO,CAACG,QAAQ,CAAC,IAAI,CAAC,CAAC;MAC7C,CAAC,MAAM;QACHhB,QAAQ,CAACR,QAAQ,CAACqB,OAAO,CAACC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvCd,QAAQ,CAACR,QAAQ,CAACqB,OAAO,CAACG,QAAQ,CAACL,IAAI,CAACI,QAAQ,CAAC,CAAC;MACtD;IACJ,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,OACI,KAAC,IAAI;IAAC,KAAK,EAAEE,MAAM,CAACC,SAAU;IAAA,UAC1B,KAAC,IAAI;MAAA;IAAA;EAAmC,EAMrC;AAEf,CAAC;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAM,CAAC;EAC7BF,SAAS,EAAE;IACPG,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,QAAQ;IACzBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAIF,eAAe5B,WAAW"},"metadata":{},"sourceType":"module"}