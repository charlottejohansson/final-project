{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect, useState, createRef } from \"react\";\nimport { useDispatch, useSelector, batch } from \"react-redux\";\nimport { useNavigate, Link } from \"react-router-native\";\nimport { API_URL } from \"../utils/utils\";\nimport user from \"../reducers/user\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Colors, Typography, Containers } from \"../styles\";\nimport { PrimaryBtn } from \"../styles/buttons\";\nimport { InputField } from \"../styles/inputfield\";\nimport { Heading } from \"../styles/heading\";\nimport { spacing } from \"../styles/spacing\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Register = function Register() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"register\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    mode = _useState6[0],\n    setMode = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var dispatch = useDispatch();\n  var navigate = useNavigate();\n  var accessToken = useSelector(function (store) {\n    return store.user.accessToken;\n  });\n  useEffect(function () {\n    if (accessToken) {\n      navigate(\"/main\");\n    }\n  }, [accessToken]);\n  var passwordInputRef = createRef();\n  var onFormSubmit = function onFormSubmit(event) {\n    event.preventDefault();\n    var options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    };\n    fetch(API_URL(mode), options).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.success) {\n        batch(function () {\n          dispatch(user.actions.setUsername(data.response.username));\n          dispatch(user.actions.setUserId(data.response.id));\n          dispatch(user.actions.setAccessToken(data.response.accessToken));\n          dispatch(user.actions.setError(null));\n        });\n      } else {\n        alert(\"error, doesn't work...\");\n        batch(function () {\n          dispatch(user.actions.setUsername(null));\n          dispatch(user.actions.setUserId(null));\n          dispatch(user.actions.setAccessToken(null));\n          dispatch(user.actions.setError(data.response));\n        });\n      }\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    onPress: onFormSubmit,\n    children: [_jsx(Heading, {}), _jsx(View, {\n      style: styles.container,\n      onPress: onFormSubmit,\n      children: _jsxs(View, {\n        style: styles.innerWrapper,\n        children: [_jsx(Text, {\n          style: styles.h2,\n          children: \"Register\"\n        }), _jsx(InputField, {\n          placeholder: \"Enter username\",\n          style: styles.input,\n          onChangeText: setUsername,\n          value: username,\n          autoCapitalize: \"none\",\n          returnKeyType: \"next\",\n          blurOnSubmit: false,\n          onSubmitEditing: function onSubmitEditing() {\n            return passwordInputRef.current && passwordInputRef.current.focus();\n          }\n        }), _jsx(InputField, {\n          placeholder: \"Enter Password\",\n          ref: passwordInputRef,\n          value: password,\n          blurOnSubmit: false,\n          secureTextEntry: true,\n          onChangeText: setPassword,\n          returnKeyType: \"next\"\n        }), _jsx(PrimaryBtn, {\n          title: \"Sign up\",\n          onPress: onFormSubmit,\n          type: \"submit\"\n        }), _jsxs(Text, {\n          style: styles.text,\n          children: [password && password.length < 8 ? 'Password must be over 8 characters' : '', error !== null && _jsx(Text, {\n            style: {\n              fontSize: '21px',\n              color: 'white'\n            },\n            children: error\n          })]\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: _objectSpread(_objectSpread({}, Containers.outerContainer), {}, {\n    justifyContent: \"center\"\n  }),\n  innerWrapper: {\n    gap: spacing.M,\n    alignContent: \"flex-start\"\n  },\n  h2: _objectSpread(_objectSpread({}, Typography.h2), {}, {\n    color: Colors.palette.lavenderBlush\n  }),\n  text: _objectSpread(_objectSpread({}, Typography.body2), {}, {\n    color: Colors.palette.lavenderBlush,\n    textAlign: \"center\"\n  }),\n  textInput: {\n    color: Colors.palette.lavenderBlush\n  }\n});\nexport default Register;","map":{"version":3,"names":["React","useEffect","useState","createRef","useDispatch","useSelector","batch","useNavigate","Link","API_URL","user","Colors","Typography","Containers","PrimaryBtn","InputField","Heading","spacing","Register","username","setUsername","password","setPassword","mode","setMode","error","setError","dispatch","navigate","accessToken","store","passwordInputRef","onFormSubmit","event","preventDefault","options","method","headers","body","JSON","stringify","fetch","then","response","json","data","success","actions","setUserId","id","setAccessToken","alert","styles","container","innerWrapper","h2","input","current","focus","text","length","fontSize","color","StyleSheet","create","outerContainer","justifyContent","gap","M","alignContent","palette","lavenderBlush","body2","textAlign","textInput"],"sources":["/Users/charlottejohansson/Desktop/final-project/final-project/ReactNativeFrontend/components/Register.js"],"sourcesContent":["import React, {useEffect, useState, createRef} from \"react\";\nimport { useDispatch, useSelector, batch } from \"react-redux\";\nimport { useNavigate, Link } from \"react-router-native\";\nimport { API_URL } from '../utils/utils'\nimport user from '../reducers/user';\nimport { StyleSheet, Text, View, Button, TouchableHighlight, TextInput, Image } from \"react-native\";\nimport { Colors, Typography, Containers } from '../styles'\nimport { PrimaryBtn } from \"../styles/buttons\";\nimport { InputField } from \"../styles/inputfield\";\nimport { Heading } from \"../styles/heading\";\nimport { spacing } from \"../styles/spacing\";\n\nconst Register = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [mode, setMode] = useState(\"register\");\n    const [error, setError] = useState(null);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const accessToken = useSelector((store) => store.user.accessToken);\n\n    useEffect( () => {\n        if (accessToken) {\n        navigate(\"/main\");\n        }\n    }, [accessToken])\n\n    const passwordInputRef = createRef(); // meaning?\n\n    const onFormSubmit =(event) => {\n        event.preventDefault();\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({username: username, password: password })\n        }\n        fetch(API_URL(mode), options)\n            .then(response => response.json())\n            .then(data => {\n                if(data.success) {\n                    batch(()=> {\n                        dispatch(user.actions.setUsername(data.response.username));\n                        dispatch(user.actions.setUserId(data.response.id))\n                        dispatch(user.actions.setAccessToken(data.response.accessToken));\n                        dispatch(user.actions.setError(null));\n                    });\n                } else {\n                    alert(\"error, doesn't work...\");\n                    batch (() => {\n                        dispatch(user.actions.setUsername(null));\n                        dispatch(user.actions.setUserId(null))\n                        dispatch(user.actions.setAccessToken(null));\n                        dispatch(user.actions.setError(data.response));\n                    });\n                }\n            })\n    }\n\n    return (\n        <View style={styles.container} onPress={(onFormSubmit)}>\n            <Heading/>\n            <View style={styles.container} onPress={(onFormSubmit)}>\n                <View style={styles.innerWrapper}>\n                    <Text style={styles.h2}>Register</Text>\n                    <InputField\n                        placeholder=\"Enter username\" \n                        style={styles.input}\n                        onChangeText={setUsername}\n                        value={username}\n                        autoCapitalize=\"none\" //meaning?\n                        returnKeyType=\"next\" // meaning?\n                        blurOnSubmit={false} // meaning?\n                        onSubmitEditing={() => passwordInputRef.current &&  passwordInputRef.current.focus()} // meaning?\n                    />\n                    <InputField \n                        placeholder=\"Enter Password\" \n                        ref={passwordInputRef}\n                        value={password} \n                        blurOnSubmit={false}\n                        secureTextEntry={true}\n                        onChangeText={setPassword}\n                        returnKeyType=\"next\" \n                    />\n                    <PrimaryBtn \n                        title=\"Sign up\"\n                        onPress={(onFormSubmit)}\n                        type=\"submit\"\n                    />\n                    <Text style={styles.text}>\n                        {password && password.length < 8\n                            ? 'Password must be over 8 characters'\n                            : ''}\n                        {error !== null && (\n                            <Text style={{ fontSize: '21px', color: 'white' }}>{error}</Text>\n                        )}\n                    </Text>\n                    \n                </View>\n            </View>\n                \n            \n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      ...Containers.outerContainer,\n      justifyContent: \"center\",\n    },\n\n    innerWrapper: {\n        gap: spacing.M,\n        alignContent: \"flex-start\",\n    },\n\n    h2: {\n        ...Typography.h2,\n        color: Colors.palette.lavenderBlush,\n    },\n  \n    text: {\n      ...Typography.body2,\n      color: Colors.palette.lavenderBlush,\n      textAlign: \"center\"\n    },\n  \n    textInput: {\n      color: Colors.palette.lavenderBlush,\n    }\n});\n\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module"}