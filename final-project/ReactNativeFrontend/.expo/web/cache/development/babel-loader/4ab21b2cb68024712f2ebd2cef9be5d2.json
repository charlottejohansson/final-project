{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, createRef } from \"react\";\nimport { useDispatch, useSelector, batch } from \"react-redux\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { API_URL } from \"../utils/utils\";\nimport user from \"../reducers/user\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"login\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    mode = _useState6[0],\n    setMode = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var dispatch = useDispatch();\n  var navigate = useNavigate();\n  var accessToken = useSelector(function (store) {\n    return store.user.accessToken;\n  });\n  useEffect(function () {\n    if (accessToken) {\n      navigate(\"/main\");\n    }\n  }, [accessToken]);\n  var passwordInputRef = createRef();\n  var onFormSubmit = function onFormSubmit(event) {\n    event.preventDefault();\n    var options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    };\n    fetch(API_URL(mode), options).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.success) {\n        batch(function () {\n          dispatch(user.actions.setUsername(data.response.username));\n          dispatch(user.actions.setUserId(data.response.id));\n          dispatch(user.actions.setAccessToken(data.response.accessToken));\n          dispatch(user.actions.setError(null));\n        });\n      } else {\n        alert(\"error, could not find user - make sure you've registered and that the password is correct \");\n        batch(function () {\n          dispatch(user.actions.setUsername(null));\n          dispatch(user.actions.setUserId(null));\n          dispatch(user.actions.setAccessToken(null));\n          dispatch(user.actions.setError(data.response));\n        });\n      }\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    onPress: onFormSubmit,\n    children: [_jsx(Text, {\n      children: \" Login page! \"\n    }), _jsx(TextInput, {\n      placeholder: \"Enter username\",\n      style: styles.input,\n      onChangeText: setUsername,\n      value: username,\n      autoCapitalize: \"none\",\n      returnKeyType: \"next\",\n      blurOnSubmit: false,\n      onSubmitEditing: function onSubmitEditing() {\n        return passwordInputRef.current && passwordInputRef.current.focus();\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Password\",\n      ref: passwordInputRef,\n      value: password,\n      blurOnSubmit: false,\n      secureTextEntry: true,\n      onChangeText: setPassword,\n      returnKeyType: \"next\"\n    }), _jsx(Button, {\n      title: \"login\",\n      onPress: onFormSubmit,\n      type: \"submit\"\n    }), _jsxs(Text, {\n      children: [\"Don't have an account?\", _jsx(Link, {\n        to: \"/register\",\n        children: \" Sign up here \"\n      })]\n    }), _jsx(Button, {\n      title: \"Back to start page\",\n      onPress: function onPress() {\n        navigate(\"/\");\n        dispatch(user.actions.setAccessToken(null));\n      },\n      type: \"submit\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'red',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useEffect","useState","createRef","useDispatch","useSelector","batch","useNavigate","Link","API_URL","user","Login","username","setUsername","password","setPassword","mode","setMode","error","setError","dispatch","navigate","accessToken","store","passwordInputRef","onFormSubmit","event","preventDefault","options","method","headers","body","JSON","stringify","fetch","then","response","json","data","success","actions","setUserId","id","setAccessToken","alert","styles","container","input","current","focus","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/Users/charlottejohansson/Desktop/final-project/final-project/ReactNativeFrontend/components/Login.js"],"sourcesContent":["import React, {useEffect, useState, createRef} from \"react\";\nimport { useDispatch, useSelector, batch } from \"react-redux\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { API_URL } from '../utils/utils'\nimport user from '../reducers/user';\nimport { StyleSheet, Text, View, TextInput, Button} from \"react-native\";\n\n\nconst Login = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [mode, setMode] = useState(\"login\");\n    const [error, setError] = useState(null);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const accessToken = useSelector((store) => store.user.accessToken);\n    useEffect( () => {\n        if (accessToken) {\n            navigate(\"/main\");\n        }\n    }, [accessToken])\n\n    const passwordInputRef = createRef(); // meaning?\n\n    const onFormSubmit =(event) => {\n        event.preventDefault();\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({username: username, password: password })\n        }\n        fetch(API_URL(mode), options)\n            .then(response => response.json())\n            .then(data => {\n                if(data.success) {\n                    batch(()=> {\n                        dispatch(user.actions.setUsername(data.response.username));\n                        dispatch(user.actions.setUserId(data.response.id))\n                        dispatch(user.actions.setAccessToken(data.response.accessToken));\n                        dispatch(user.actions.setError(null));\n                    });\n                } else {\n                    alert(\"error, could not find user - make sure you've registered and that the password is correct \");\n                    batch (() => {\n                        dispatch(user.actions.setUsername(null));\n                        dispatch(user.actions.setUserId(null))\n                        dispatch(user.actions.setAccessToken(null));\n                        dispatch(user.actions.setError(data.response));\n                    });\n                }\n            })\n    }\n    return (\n        <View style={styles.container} onPress={(onFormSubmit)}>\n        <Text> Login page! </Text>\n\n            <TextInput\n            placeholder=\"Enter username\" \n            style={styles.input}\n            onChangeText={setUsername}\n            value={username}\n            autoCapitalize=\"none\" //meaning?\n            returnKeyType=\"next\" // meaning?\n            blurOnSubmit={false} // meaning?\n            onSubmitEditing={() => passwordInputRef.current &&  passwordInputRef.current.focus()} // meaning?\n             />\n\n\n            <TextInput \n                placeholder=\"Enter Password\" \n                ref={passwordInputRef}\n                value={password} \n                blurOnSubmit={false}\n                secureTextEntry={true}\n                onChangeText={setPassword}\n                returnKeyType=\"next\" \n             />\n\n            <Button \n             title=\"login\"\n             onPress={(onFormSubmit)}\n             type=\"submit\"\n             />\n\n        <Text>\n            Don't have an account?\n               <Link to='/register'> Sign up here </Link>\n            </Text>\n\n            <Button \n                title=\"Back to start page\"\n                onPress={() => { navigate(\"/\"); dispatch(user.actions.setAccessToken(null));}}\n                type=\"submit\"\n                />\n         \n      </View>\n    )}\n\n\n\n    const styles = StyleSheet.create({\n        container: {\n        flex: 1,\n        backgroundColor: 'red',\n        alignItems: 'center',\n        justifyContent: 'center',\n        },\n        });\n\n    \n\nexport default Login;\n\n\n\n  \n"],"mappings":"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"},"metadata":{},"sourceType":"module"}