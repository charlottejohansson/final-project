{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route, Navigate, useParams } from 'react-router-native';\nimport { Link } from 'react-router-native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Start = function Start(_ref) {\n  var movies = _ref.movies;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchResults = _useState4[0],\n    setSearchResults = _useState4[1];\n  var _useParams = useParams(),\n    search_result = _useParams.search_result;\n  var onFormSubmit = function onFormSubmit(event) {\n    event.preventDefault();\n    var options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': 'e8ab353f9dmsh0ed7b069671f69cp1bb323jsn7175036a5189',\n        'X-RapidAPI-Host': 'watchmode.p.rapidapi.com'\n      }\n    };\n    fetch(\"https://watchmode.p.rapidapi.com/autocomplete-search/?search_value=\" + title, options).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      return setSearchResults(response.results);\n    }).catch(function (err) {\n      return console.error(err);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Start page Click\"\n    }), _jsx(Link, {\n      to: \"/login\",\n      children: _jsx(Text, {\n        children: \"here\"\n      })\n    }), _jsx(Text, {\n      children: \"to sign up or sign in Get Streaming details of Movie and TV Shows from 150+ Streaming platforms \"\n    }), _jsx(TextInput, {\n      placeholder: \"search for movie\",\n      type: \"text\",\n      onChangeText: function onChangeText(text) {\n        setTitle(text);\n        setSearchResults(null);\n      }\n    }), _jsx(Button, {\n      title: \"Search\",\n      onPress: onFormSubmit,\n      type: \"submit\"\n    }), searchResults && _jsx(View, {\n      children: searchResults.map(function (item) {\n        return _jsxs(View, {\n          children: [\" \", _jsxs(Text, {\n            children: [item.name, \" \"]\n          })]\n        }, item.name);\n      })\n    }), _jsx(View, {\n      children: movies.map(function (movie) {\n        return _jsx(Link, {\n          to: \"/MovieDetails/\" + movie.id,\n          children: _jsxs(View, {\n            children: [_jsx(Image, {\n              style: {\n                width: '50%',\n                height: '100%'\n              },\n              source: {\n                uri: \"https://image.tmdb.org/t/p/w342\" + movie.poster_path\n              }\n            }), _jsxs(View, {\n              children: [_jsx(Text, {\n                children: movie.title\n              }), _jsxs(Text, {\n                children: [\"Released \", movie.release_date]\n              })]\n            })]\n          })\n        }, movie.id);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'lightpink',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Start;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Routes","Route","Navigate","useParams","Link","Start","movies","title","setTitle","searchResults","setSearchResults","search_result","onFormSubmit","event","preventDefault","options","method","headers","fetch","then","response","json","results","catch","err","console","error","styles","container","text","map","item","name","movie","id","width","height","uri","poster_path","release_date","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/Users/charlottejohansson/Desktop/final-project/final-project/ReactNativeFrontend/components/Start.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { BrowserRouter, Routes, Route, Navigate, useParams } from 'react-router-native';\nimport { Link } from 'react-router-native';\nimport { StyleSheet, Text, View, Button, TextInput, Image } from \"react-native\";\n\nconst Start = ({movies}) => {\n\n  const [title, setTitle] = useState(null); // Input title of the show/movie\n\tconst [searchResults, setSearchResults] = useState(null); // Response 1: Results matching the input title\n  const { search_result } = useParams(); // need this?\n\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': 'e8ab353f9dmsh0ed7b069671f69cp1bb323jsn7175036a5189',\n        'X-RapidAPI-Host': 'watchmode.p.rapidapi.com'\n      }\n    };\n\n  fetch(`https://watchmode.p.rapidapi.com/autocomplete-search/?search_value=${title}`, options)\n    .then(response => response.json())\n    .then(response => setSearchResults(response.results))\n    .catch(err => console.error(err));\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text>Start page Click</Text> \n      <Link to='/login'><Text>here</Text></Link> \n      <Text>to sign up or sign in\n        Get Streaming details of Movie and TV Shows from 150+ Streaming\n        platforms </Text>\n\n      <TextInput\n        placeholder=\"search for movie\"\n        type= \"text\"\n        onChangeText={(text) => {\n          setTitle(text);\n          setSearchResults(null); // Remove previous results\n        }}\n      />\n\n      <Button\n        title=\"Search\"\n        onPress={(onFormSubmit)}\n        type=\"submit\"\n      />\n\n    {searchResults && (\n      <View>\n        {searchResults.map((item) => {\n          return (\n            <View key={item.name}> <Text>{item.name} </Text></View>\n          )\n        })}\n      </View>\n    )}\n\n      <View>\n        {movies.map((movie) => (\n          <Link\n            key={movie.id}\n            to={`/MovieDetails/${movie.id}`}>\n              <View>\n                <Image\n                  style={{width: '50%', height: '100%'}}\n                  source={{ uri: `https://image.tmdb.org/t/p/w342${movie.poster_path}` }}/>\n                <View>\n                  <Text>{movie.title}</Text>\n                  <Text>Released {movie.release_date}</Text>\n                </View>\n              </View>\n          </Link>\n        ))}\n      </View>\n    </View>\n    );\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: 'lightpink',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  });\n\n  export default Start;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}