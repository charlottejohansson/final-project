{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Start = function Start() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchResults = _useState4[0],\n    setSearchResults = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    titleDetails = _useState6[0],\n    setTitleDetails = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    streamingInfo = _useState8[0],\n    setStreamingInfo = _useState8[1];\n  var getTitle = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var res = yield axios.get('api/search/', {\n          params: {\n            title: title\n          }\n        });\n        var data = res.data;\n        setSearchResults(data.results);\n      } catch (error) {}\n    });\n    return function getTitle() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var onFormSubmit = function onFormSubmit(event) {\n    getTitle();\n    event.preventDefault();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    onPress: onFormSubmit,\n    children: [_jsx(Text, {\n      children: \"Get Streaming details of Movie and TV Shows from 150+ Streaming platforms\"\n    }), _jsx(TextInput, {\n      placeholder: \"search for movie\",\n      type: \"text\",\n      onChange: function onChange(event) {\n        setTitle(event.target.value);\n        setSearchResults(null);\n        setTitleDetails(null);\n      }\n    }), _jsx(Button, {\n      title: \"Search\",\n      onPress: onFormSubmit,\n      type: \"submit\"\n    }), searchResults == null ? void 0 : searchResults.map(function (item) {\n      _jsx(View, {}, item.title);\n    }), _jsxs(Text, {\n      children: [\"Start page Click \", _jsx(Link, {\n        to: \"/login\",\n        children: \"here \"\n      }), \" to sign up or sign in \"]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'lightpink',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Start;","map":{"version":3,"names":["React","useState","Link","Start","title","setTitle","searchResults","setSearchResults","titleDetails","setTitleDetails","streamingInfo","setStreamingInfo","getTitle","res","axios","get","params","data","results","error","onFormSubmit","event","preventDefault","styles","container","target","value","map","item","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/Users/charlottejohansson/Desktop/final-project/final-project/ReactNativeFrontend/components/Start.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport { Link } from 'react-router-dom';\nimport { StyleSheet, Text, View, Button, TextInput } from \"react-native\";\n\n\n\nconst Start = () => {\n\n  const [title, setTitle] = useState(null); // Input title of the show/movie\n\tconst [searchResults, setSearchResults] = useState(null); // Response 1: Results matching the input title\n\tconst [titleDetails, setTitleDetails] = useState(null); // Response 2: ID of Title selected by the user from the results\n\tconst [streamingInfo, setStreamingInfo] = useState(null); // Response 2: Streaming availability of the selected title\n\n\n  const getTitle = async () => {\n    try {\n      const res = await axios.get('api/search/', {\n        params: {title}\n      });\n      const {data} = res;\n      setSearchResults(data.results); // Storing the response\n    } catch (error) {}\n  };\n\n  // const getTitleDetails = async (id) => {\n  //   try {\n  //     const res = await axios.get(\"api/details/\", {\n  //       params: { id },\n  //     });\n  //     const { data } = res;\n  //     setTitleDetails(data);\n  //     setStreamingInfo(data.streamingAvailability.country.US);\n  //   } catch (error) {\n  //   }\n  // };\n\n  const onFormSubmit = (event) => {\n    getTitle();\n    event.preventDefault();\n    // event.stopPropagation(); // meaning?\n  }\n\nreturn (\n  <View style={styles.container} onPress={(onFormSubmit)}>\n    <Text>\n\t\t\t\tGet Streaming details of Movie and TV Shows from 150+ Streaming\n\t\t\t\tplatforms\n\t\t</Text>\n\n    <TextInput\n      placeholder=\"search for movie\"\n      type= \"text\"\n      onChange={(event) => {\n        setTitle(event.target.value);\n        setSearchResults(null); // Remove previous results\n        setTitleDetails(null);\n      }}\n\n      // style={styles.input}\n      // onChangeText={setUsername}\n      // value={username}\n      // autoCapitalize=\"none\" //meaning?\n      // returnKeyType=\"next\" // meaning?\n      // blurOnSubmit={false} // meaning?\n      // onSubmitEditing={() => passwordInputRef.current &&  passwordInputRef.current.focus()} // meaning?\n\n\n    />\n    <Button \n       title=\"Search\"\n       onPress={(onFormSubmit)}\n       type=\"submit\"\n    />\n\n {searchResults?.map((item) => {\n        <View key={item.title}/>\n    })} \n\n\n    <Text>Start page\n  Click <Link to='/login'>here </Link> to sign up or sign in </Text>\n  </View>\n);\n}\n\n\nconst styles = StyleSheet.create({\ncontainer: {\nflex: 1,\nbackgroundColor: 'lightpink',\nalignItems: 'center',\njustifyContent: 'center',\n},\n});\n\nexport default Start;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKxC,IAAMC,KAAK,GAAG,SAARA,KAAK,GAAS;EAElB,gBAA0BF,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjCG,KAAK;IAAEC,QAAQ;EACvB,iBAA0CJ,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjDK,aAAa;IAAEC,gBAAgB;EACtC,iBAAwCN,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA/CO,YAAY;IAAEC,eAAe;EACpC,iBAA0CR,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjDS,aAAa;IAAEC,gBAAgB;EAGrC,IAAMC,QAAQ;IAAA,6BAAG,aAAY;MAC3B,IAAI;QACF,IAAMC,GAAG,SAASC,KAAK,CAACC,GAAG,CAAC,aAAa,EAAE;UACzCC,MAAM,EAAE;YAACZ,KAAK,EAALA;UAAK;QAChB,CAAC,CAAC;QACF,IAAOa,IAAI,GAAIJ,GAAG,CAAXI,IAAI;QACXV,gBAAgB,CAACU,IAAI,CAACC,OAAO,CAAC;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE,CAAC;IACnB,CAAC;IAAA,gBARKP,QAAQ;MAAA;IAAA;EAAA,GAQb;EAcD,IAAMQ,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAK,EAAK;IAC9BT,QAAQ,EAAE;IACVS,KAAK,CAACC,cAAc,EAAE;EAExB,CAAC;EAEH,OACE,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAC,OAAO,EAAGJ,YAAc;IAAA,WACrD,KAAC,IAAI;MAAA;IAAA,EAGA,EAEL,KAAC,SAAS;MACR,WAAW,EAAC,kBAAkB;MAC9B,IAAI,EAAE,MAAM;MACZ,QAAQ,EAAE,kBAACC,KAAK,EAAK;QACnBhB,QAAQ,CAACgB,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC;QAC5BnB,gBAAgB,CAAC,IAAI,CAAC;QACtBE,eAAe,CAAC,IAAI,CAAC;MACvB;IAAE,EAWF,EACF,KAAC,MAAM;MACJ,KAAK,EAAC,QAAQ;MACd,OAAO,EAAGW,YAAc;MACxB,IAAI,EAAC;IAAQ,EACd,EAEJd,aAAa,oBAAbA,aAAa,CAAEqB,GAAG,CAAC,UAACC,IAAI,EAAK;MACvB,KAAC,IAAI,MAAMA,IAAI,CAACxB,KAAK,CAAG;IAC5B,CAAC,CAAC,EAGF,MAAC,IAAI;MAAA,gCACD,KAAC,IAAI;QAAC,EAAE,EAAC,QAAQ;QAAA;MAAA,EAAa;IAAA,EAA8B;EAAA,EAC3D;AAET,CAAC;AAGD,IAAMmB,MAAM,GAAGM,UAAU,CAACC,MAAM,CAAC;EACjCN,SAAS,EAAE;IACXO,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,WAAW;IAC5BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAChB;AACA,CAAC,CAAC;AAEF,eAAe/B,KAAK"},"metadata":{},"sourceType":"module"}